snippet tests "Test Module"
#[cfg(test)]
mod tests {
	use super::*;

	${1}
}
endsnippet

snippet test "Unit Test Template"
#[test]
fn test_${1:func_name}() {
	let actual = ${2:func_under_test};
    let expected = ${3:None};
	assert_eq!(actual, expected);
}
endsnippet

snippet main "Main function"
fn main() {
	${1}
}
endsnippet

snippet derive "Add derive"
#[derive(${1})]
endsnippet

snippet implerror "Implement Error"
impl std::error::Error for ${1:StructName} {}
impl std::fmt::Display for ${1:StructName} {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        f.write_str("${2:ErrorMsg}")
    }
}
endsnippet
